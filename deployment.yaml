apiVersion: v1
kind: Namespace
metadata:
  name: proxy
  labels:
   name: proxy
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: deployment
  namespace: proxy
  labels:
    app: proxy
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: proxy
    spec:
      containers:
      - name: proxy
        image: wildapplications/proxy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
      imagePullSecrets:
        - name: regsecret
---
apiVersion: v1
kind: Service
metadata:
  name: service
  namespace: proxy
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: proxy
  externalName: proxy
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress
  namespace: proxy
  annotations:
    # kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "gce"
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: api.wildapplications.com
    http:
      paths:
      - path: /
        backend:
          serviceName: service
          servicePort: 80
---
apiVersion: v1
data:
  .dockercfg: eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJ3aWxkYXBwbGljYXRpb25zIiwicGFzc3dvcmQiOiIzMDA1OTVCVCIsImVtYWlsIjoibWljaGFlbEB3aWxkYXBwbGljYXRpb25zLmNvbSIsImF1dGgiOiJkMmxzWkdGd2NHeHBZMkYwYVc5dWN6b3pNREExT1RWQ1ZBPT0ifX0=
kind: Secret
metadata:
  name: regsecret
  namespace: proxy
type: kubernetes.io/dockercfg
